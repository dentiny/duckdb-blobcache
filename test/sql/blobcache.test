# name: test/sql/blobcache.test
# description: test blobcache extension
# group: [sql]

require parquet

require blobcache

statement ok
install tpch

statement ok
load tpch

statement ok
call dbgen(sf=0.3);

statement ok
copy lineitem to 'lineitem.parquet';

statement ok
call enable_logging(level='error');

statement ok
select max(l_comment) from read_parquet('fake_s3://lineitem.parquet');

query I
select message from duckdb_logs;
----

query II
select count(*), sum(usage_count) from blobcache_stats();
----
16	0

statement ok
select max(l_comment) from read_parquet('fake_s3://lineitem.parquet');

query II
select count(*), sum(usage_count) from blobcache_stats();
----
16	16

# Verify that bytes_from_mem is now > 0 (memory cache hits on second read)
query I
select sum(bytes_from_mem) > 0 from blobcache_stats();
----
1

statement ok
select max(l_comment) from read_parquet('fake_s3://lineitem.parquet');

query II
select count(*), sum(usage_count) from blobcache_stats();
----
16	32

# Verify bytes_from_mem still > 0 after third read (with external file cache disabled)
query I
select sum(bytes_from_mem) > 0 from blobcache_stats();
----
1

statement ok
from blobcache_config('.blobcache2/', 1024, 255);

# Directory changed, so cache should be cleared
query I
select count(*) from blobcache_stats();
----
0

query IIIII
select * replace(substr(cache_path,0,12) as cache_path) from blobcache_config();
----
.blobcache2	1073741824	0	255	1

# Run a query to populate the new cache
statement ok
select max(l_comment) from read_parquet('fake_s3://lineitem.parquet');

# take ducklake for a spin
statement ok
install ducklake

statement ok
load ducklake

statement ok
ATTACH 'ducklake:fake_s3://network.ducklake' AS my_ducklake;

statement ok
create or replace table my_ducklake.supplier as (from supplier);

statement ok
select max(s_suppkey) from my_ducklake.supplier;

# we should get caching
query I
select count(*) > 32 from blobcache_stats();
----
1
